The Map Interface: A Map is an object that maps keys to values. A map cannot contain duplicate keys: Each key can map to at most one value.
It models the mathematical function abstraction. The Map interface includes methods for basic operations (such as put, get, remove, containsKey, containsValue, size, and empty),
bulk operations (such as putAll and clear), and collection views (such as keySet, entrySet, and values).

Map (Interface) ->HashTable(Class), HashMap (Class) LinkedHashMap (class)
Map (Interface) ->SortedMap (Interface)->NavigableMap(Interface) -> TreeMap(Class)

Map<key,value>
Map<k,v>

Map- Key and Value paire
Map<String,String> m = new Map<String,String>();
m.put("Name","Tom");
m.put("dept.","admin");

m.get(“name”)-> Tom

Examples of Map
1.	Error codes (1.2.1 : "fatal error")
2.	Map of sip codes
3.	Map of manages and employees
4.	Test data storage
5.	Configuration / Env variables
6.	Headers in Rest API – Authorization

Methods:
1.put()
2.putAll
3.get(key)
4.containsKey(key)
5.remove(key)
6.keySet()
7. entrySet()
